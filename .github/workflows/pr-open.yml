name: Pull Request

on:
  pull_request:

concurrency:
  # PR open and close use the same group, allowing only one at a time
  group: pr-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pr-greeting:
    name: PR Greeting
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      PREFIX: ${{ github.event.repository.name }}-${{ github.event.number }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - name: PR Greeting
        uses: bcgov-nr/action-pr-description-add@v0.0.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_markdown: |
            ---
            Thanks for the PR!
            Once merged, code will be promoted and handed off to following workflow run.
            [Main Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge-main.yml)

  builds:
    name: Builds
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [consumer-go,consumer-rust,consumer-node, database, frontend-api, frontend-static,consumer-python]
        include:
          - package: consumer-node
            triggers: ('consumer-node/')
            build_file: ./consumer-node/Dockerfile
            build_context: ./consumer-node
          - package: consumer-rust
            triggers: ('consumer-rust/')
            build_file: ./consumer-rust/Dockerfile
            build_context: ./consumer-rust
          - package: database
            triggers: ('database/')
            build_file: ./database/Dockerfile
            build_context: ./database
          - package: consumer-go
            triggers: ('consumer-go/')
            build_file: ./consumer-go/Dockerfile
            build_context: ./consumer-go

          - package: frontend-api
            triggers: ('frontend/api')
            build_file: ./frontend/api/Dockerfile
            build_context: ./frontend/api
          - package: frontend-static
            triggers: ('frontend/static')
            build_file: ./frontend/static/Dockerfile
            build_context: ./frontend/static
          - package: consumer-python
            triggers: ('consumer-python/')
            build_file: ./consumer-python/Dockerfile
            build_context: ./consumer-python

    steps:
      - uses: actions/checkout@v3
      - uses: bcgov-nr/action-builder-ghcr@v1.1.0
        with:
          package: ${{ matrix.package }}
          tag: ${{ github.event.number }}
          tag_fallback: test
          token: ${{ secrets.GITHUB_TOKEN }}
          triggers: ${{ matrix.triggers }}
          build_file: ${{ matrix.build_file }}
          build_context: ${{ matrix.build_context }}
  build-java:
    name: Build Java
    runs-on: ubuntu-22.04

    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
        name: checkout code
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
      - name: Build App
        working-directory: publisher-java-api
        run: |
          
          ls -lrt
          chmod +x ./mvnw
          ./mvnw -Pnative clean spring-boot:build-image -DskipTests \
          -Dspring-boot.build-image.imageName="bcgov/nr-arch-choreography-saga/publisher-java-api" \
          -Doci.revision=${{ github.event.number }}

      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pushing
        run: docker push bcgov/nr-arch-choreography-saga/publisher-java-api:${{ github.event.number }}
  deploys:
    name: Deploys
    needs:
      - builds
      - build-java
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        name: [consumer-go, consumer-node,consumer-rust, database, init, frontend-api,frontend-static,publisher-java-api,consumer-python]
        include:
          - name: consumer-go
            file: consumer-go/openshift.deploy.yml
            overwrite: true
            parameters: -p MIN_REPLICAS=1 -p MAX_REPLICAS=1
          - name: consumer-rust
            file: consumer-rust/openshift.deploy.yml
            overwrite: true
            parameters: -p MIN_REPLICAS=1 -p MAX_REPLICAS=1
          - name: publisher-java-api
            file: publisher-java-api/openshift.deploy.yml
            overwrite: true
            parameters: -p MIN_REPLICAS=1 -p MAX_REPLICAS=1
          - name: consumer-node
            file: consumer-node/openshift.deploy.yml
            overwrite: true
            parameters: -p MIN_REPLICAS=1 -p MAX_REPLICAS=1
          - name: database
            file: database/openshift.deploy.yml
            overwrite: false
          - name: frontend-api
            file: frontend/api/openshift.deploy.yml
            overwrite: true
            parameters: -p MIN_REPLICAS=1 -p MAX_REPLICAS=1
          - name: consumer-python
            file: consumer-python/openshift.deploy.yml
            overwrite: true
            parameters: -p MIN_REPLICAS=1 -p MAX_REPLICAS=1
          - name: frontend-static
            file: frontend/static/openshift.deploy.yml
            overwrite: true
            parameters: -p MIN_REPLICAS=1 -p MAX_REPLICAS=1
          - name: init
            file: common/openshift.init.yml
            overwrite: false
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          penetration_test: false
          parameters:
            -p ZONE=${{ github.event.number }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/${{ matrix.name }}:${{ github.event.number }}
            ${{ matrix.parameters }}
